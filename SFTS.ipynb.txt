{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Similarity filtration using time skeleton"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In this work, we explore the concept of similarity filtration using time skeleton, and how well can it be used to grade high school essays. The SFTS procedure is as follows:\n",
    "\n",
    "* Embed word blocks into a vector space where semantic similarity is preserved. \n",
    "* Compute the distance matrix.\n",
    "* Explicitly set $d$($x_i$, $x_{i+1}$) = 0, where $x_i$'s are the word blocks, with $i$ being their position in the document.\n",
    "* Compute the persistent diagram. Each persistent one dimensional hole represents one tie-back in the document.\n",
    "\n",
    "Once distance between consecutive word blocks have been assigned 0, then throughout the filtration, a chain will be present which connects all the points. Whenever two disconnected points get $\\epsilon$-close, where $\\epsilon$ is the current distance threshold in the filtration, a one-dimensional hole will be formed because every point is already connected to each other through the chain. If the tie-backs are persistent, that would imply the author has digressed enough from the topic before coming back to it. This would explain why it took a high value of $\\epsilon$ threshold for the hole to get filled.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [],
   "source": [
    "import gudhi\n",
    "from ripser import ripser\n",
    "from persim import plot_diagrams \n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from keras.models import Sequential\n",
    "from keras.layers import Dense, Activation, Flatten\n",
    "from collections import Counter\n",
    "import math\n",
    "import random \n",
    "from nltk.corpus import stopwords \n",
    "from nltk.tokenize import RegexpTokenizer\n",
    "from nltk.tokenize import sent_tokenize"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "[nltk_data] Downloading package punkt to /home/jovyan/nltk_data...\n",
      "[nltk_data]   Package punkt is already up-to-date!\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "True"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "import nltk\n",
    "nltk.download('punkt')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Set of stopwords\n",
    "sw = set(stopwords.words('english'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "class color:\n",
    "   PURPLE = '\\033[95m'\n",
    "   CYAN = '\\033[96m'\n",
    "   DARKCYAN = '\\033[36m'\n",
    "   BLUE = '\\033[94m'\n",
    "   GREEN = '\\033[92m'\n",
    "   YELLOW = '\\033[93m'\n",
    "   RED = '\\033[91m'\n",
    "   BOLD = '\\033[1m'\n",
    "   UNDERLINE = '\\033[4m'\n",
    "   END = '\\033[0m'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def prep(con_mix, sw, embeddings_dict):\n",
    "    tokenizer = RegexpTokenizer(r'\\w+')\n",
    "    con_mix1 = []\n",
    "    for x in con_mix:\n",
    "        con_mix1 = con_mix1 + sent_tokenize(x)\n",
    "    con_mix2 = []\n",
    "    for x in con_mix1:\n",
    "        if len(x) > 5:\n",
    "            temp = tokenizer.tokenize(x)\n",
    "            temp1 = [y.lower() for y in temp]\n",
    "            con_mix2.append(temp1)\n",
    "    corpus_mix = []\n",
    "    for x in con_mix2:\n",
    "        corpus_mix = corpus_mix + x\n",
    "    counts_mix = Counter(corpus_mix)\n",
    "    df_mix = []\n",
    "    for x in con_mix2:\n",
    "      i = 0\n",
    "      temp = np.zeros(len(embeddings_dict['cat']))\n",
    "      for y in x:\n",
    "        try:\n",
    "          if y not in sw: \n",
    "              temp += embeddings_dict[y]\n",
    "              i += 1\n",
    "        except KeyError:\n",
    "          continue\n",
    "      df_mix.append(temp/i)\n",
    "    df_mix_mat = np.vstack(df_mix)\n",
    "    return(df_mix_mat, con_mix2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ripss(con_sent_tok, sw, embeddings_dict, single, doplot):   \n",
    "    if single == True:\n",
    "        adult_prepped = prep_single(con_sent_tok, sw, embeddings_dict)\n",
    "    adult_rips = ripser(adult_prepped, maxdim = 1, metric = 'euclidean')\n",
    "    adult_rips_dist = adult_rips['dperm2all']\n",
    "    for i in range(adult_rips_dist.shape[0] - 1):\n",
    "      adult_rips_dist[i,i+1] = 0\n",
    "      adult_rips_dist[i+1,i] = 0\n",
    "    adult_rips_SIFTS = ripser(adult_rips_dist, maxdim = 1, metric = 'euclidean', \n",
    "                             distance_matrix = True)\n",
    "    if doplot == True:\n",
    "        plot_diagrams(adult_rips_SIFTS['dgms'], show=True)\n",
    "    return(adult_rips_dist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ripss2(con_sent_tok, sw, embeddings_dict, single, doplot, thresh_clust):   \n",
    "    if single == True:\n",
    "        adult_prepped = prep_single(con_sent_tok, sw, embeddings_dict)\n",
    "    adult_rips = ripser(adult_prepped, maxdim = 1, metric = 'euclidean')\n",
    "    adult_rips_mean = 0\n",
    "    adult_rips_clust = 0\n",
    "    temp = []\n",
    "    for x in adult_rips['dgms'][0]:\n",
    "        if x[0] == 0:\n",
    "            if x[1] != np.inf:\n",
    "                if x[1] >= thresh_clust:\n",
    "                    temp.append(x[1] - thresh_clust)\n",
    "                    adult_rips_clust += 1\n",
    "    adult_rips_mean = np.mean(temp)\n",
    "    adult_rips_dist = adult_rips['dperm2all']\n",
    "    for i in range(adult_rips_dist.shape[0] - 1):\n",
    "      adult_rips_dist[i,i+1] = 0\n",
    "      adult_rips_dist[i+1,i] = 0\n",
    "    adult_rips_SIFTS = ripser(adult_rips_dist, maxdim = 1, metric = 'euclidean', \n",
    "                             distance_matrix = True)\n",
    "    if doplot == True:\n",
    "        plot_diagrams(adult_rips_SIFTS['dgms'], show=True)\n",
    "    if math.isnan(adult_rips_mean):\n",
    "        adult_rips_mean = 0\n",
    "    return(adult_rips_dist, adult_rips_mean, adult_rips_clust)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def ripss1(con_sent_tok, sw, embeddings_dict, single, doplot):   \n",
    "    if single == True:\n",
    "        adult_prepped = prep_single(con_sent_tok, sw, embeddings_dict)\n",
    "    adult_rips = ripser(adult_prepped, maxdim = 1, metric = 'euclidean')\n",
    "    adult_rips_dist = adult_rips['dperm2all']\n",
    "    for i in range(adult_rips_dist.shape[0] - 1):\n",
    "      adult_rips_dist[i,i+1] = 0\n",
    "      adult_rips_dist[i+1,i] = 0\n",
    "    adult_rips_SIFTS = ripser(adult_rips_dist, maxdim = 1, metric = 'euclidean', \n",
    "                             distance_matrix = True)\n",
    "    if doplot == True:\n",
    "        plot_diagrams(adult_rips_SIFTS['dgms'], show=True)\n",
    "    return(adult_rips_dist)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 83,
   "metadata": {},
   "outputs": [],
   "source": [
    "# This function is used to convert the text into sentence vectors\n",
    "def prep_single(con_mix1, sw, embeddings_dict):\n",
    "    tokenizer = RegexpTokenizer(r'\\w+')\n",
    "    con_mix2 = []   \n",
    "    for x in con_mix1:\n",
    "        if len(x) >= 5:\n",
    "            temp = tokenizer.tokenize(x)\n",
    "            temp1 = [y.lower() for y in temp]\n",
    "            con_mix2.append(temp1)\n",
    "    df_mix = []\n",
    "    for x in con_mix2:\n",
    "        if len(x) >= 1:\n",
    "            i = 0\n",
    "            temp = np.zeros(len(embeddings_dict['cat']))\n",
    "            for y in x:\n",
    "                try:\n",
    "                    if y not in sw: \n",
    "                        temp += embeddings_dict[y]\n",
    "                        i += 1\n",
    "                except KeyError:\n",
    "                    continue\n",
    "            if i != 0:\n",
    "                df_mix.append(temp/i)   \n",
    "    return(np.vstack(df_mix))  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "metadata": {},
   "outputs": [],
   "source": [
    "def persis(dist, thresh):\n",
    "    # Create a rips complex\n",
    "    rips_complex = gudhi.RipsComplex(distance_matrix = dist)\n",
    "    simplex_tree = rips_complex.create_simplex_tree(max_dimension=2)\n",
    "    persi = simplex_tree.persistence(homology_coeff_field = 2, min_persistence = thresh, persistence_dim_max = 2)\n",
    "    stgf = simplex_tree.get_filtration()\n",
    "    # Let's pick out the tie backs from the filtration\n",
    "    holes = []\n",
    "    for x in stgf:\n",
    "        if len(x[0]) == 2 and abs(x[0][0] - x[0][1]) != 1:\n",
    "            holes.append(x)\n",
    "    pers = [x for x in persi if x[0] == 1]\n",
    "    # Here we pick out the persistence of each tie back\n",
    "    stgf_pers = []\n",
    "    for x in pers:\n",
    "        for y in holes:\n",
    "            if x[1][0] == y[1]:\n",
    "                stgf_pers.append((y[0],x[1], x[1][1] - x[1][0]))\n",
    "    return sorted(stgf_pers, reverse = True, key=lambda x: x[2])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "def print_text(res, df):\n",
    "    for x in res:\n",
    "        print(color.BOLD + '{}\\n\\n{}'.format(' '.join(df[x[0][0]]),' '.join(df[x[0][1]])) + color.BOLD + '\\n\\n\\n\\n\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Seting up pre_trained GLoVe vectos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We use pre-trained glove vectos for embedding text blocks into a 300-dimensional real vector space. The glove model gives a 300 dimensional vector for each word. For embedding text blocks, we compute the centroid of each of the vectors of the words in the block."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [],
   "source": [
    "embeddings_dict = {}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open(\"tdanurse/glove.6B.300d.txt\", 'r') as f:\n",
    "    for line in f:\n",
    "        values = line.split()\n",
    "        word = values[0]\n",
    "        vector = np.asarray(values[1:], \"float32\")\n",
    "        embeddings_dict[word] = vector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "def find_closest_embeddings(embedding):\n",
    "    return sorted(embeddings_dict.keys(), key=lambda word: spatial.distance.euclidean(embeddings_dict[word], embedding))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Itsy Bitsy Rhyme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [],
   "source": [
    "itsy_bitsy = ['The itsy bitsy spider Climbed up the waterspout',\n",
    "'Down came the rain And washed the spider out',\n",
    "'Out came the sun And dried up all the rain',\n",
    "'And the itsy bitsy spider Climbed up the spout again',\n",
    "'The itsy bitsy spider Climbed up the kitchen wall',\n",
    "'Swoosh! went the fan And made the spider fall',\n",
    "'Off went the fan No longer did it blow',\n",
    "'So the itsy bitsy spider Back up the wall did go',\n",
    "'The itsy bitsy spider Climbed up the yellow pail',\n",
    "'In came a mouse And flicked her with his tail',\n",
    "'Down fell the spider The mouse ran out the door',\n",
    "'Then the itsy bitsy spider Climbed up the pail once more',\n",
    "'The itsy bitsy spider Climbed up the rocking chair',\n",
    "'Up jumped a cat And knocked her in the air',\n",
    "'Down plopped the cat And when he was asleep',\n",
    "'The itsy bitsy spider Back up the chair did creep',\n",
    "'The itsy bitsy spider Climbed up the maple tree',\n",
    "'She slipped on some dew And landed next to me',\n",
    "'Out came the sun And when the tree was dry',\n",
    "'The itsy bitsy spider Gave it one more try',\n",
    "'The itsy bitsy spider Climbed up without a stop',\n",
    "'She spun a silky web Right at the very top',\n",
    "'She wove and she spun And when her web was done',\n",
    "'The itsy bitsy spider Rested in the sun']"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Each line is considered one single text block."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [],
   "source": [
    "itsy_bitsy_lower = []\n",
    "for x in itsy_bitsy:\n",
    "  #print(x)\n",
    "  lis = x.split()\n",
    "  #print(lis)\n",
    "  sentence = []\n",
    "  for y in lis:\n",
    "    \n",
    "    sentence.append(y.lower())\n",
    "  itsy_bitsy_lower.append(sentence)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_itsy = []\n",
    "for x in itsy_bitsy_lower:\n",
    "  i = 0\n",
    "  temp = np.zeros(len(embeddings_dict['cat']))\n",
    "  for y in x:\n",
    "    try: \n",
    "      temp += embeddings_dict[y]\n",
    "      i += 1\n",
    "    except KeyError:\n",
    "      continue\n",
    "  df_itsy.append(temp/i)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_itsy_mat = np.vstack(df_itsy)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/ripser/ripser.py:220: UserWarning: The input point cloud has more columns than rows; did you mean to transpose?\n",
      "  \"The input point cloud has more columns than rows; \"\n"
     ]
    }
   ],
   "source": [
    "itsy_rips = ripser(df_itsy_mat, maxdim = 1, metric = 'euclidean')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Persistent diagram for Itsy-Bitsy rhyme without Time Skeleton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_diagrams(itsy_rips['dgms'], show=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {},
   "outputs": [],
   "source": [
    "itsy_rips_dist = itsy_rips['dperm2all']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(23):\n",
    "  itsy_rips_dist[i,i+1] = 0\n",
    "  itsy_rips_dist[i+1,i] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {},
   "outputs": [],
   "source": [
    "itsy_rips_SIFTS = ripser(itsy_rips_dist, maxdim = 1, metric = 'euclidean', \n",
    "                         distance_matrix = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Persistent diagram for Itsy-Bitsy rhyme with Time Skeleton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_diagrams(itsy_rips_SIFTS['dgms'], show=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "As expected, there is only one single cluster throughout the filtration."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {},
   "outputs": [],
   "source": [
    "res_itsy = persis(itsy_rips_dist, 0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Below are the tie backs and their associated birth death times"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 84,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[([3, 11], (1.003039256076638, 2.5951724290300486), 1.5921331729534107),\n",
       " ([7, 15], (1.1512486295316227, 2.440740601644607), 1.2894919721129843),\n",
       " ([3, 20], (1.2147636989038062, 2.360245301207658), 1.1454816023038517),\n",
       " ([0, 3], (1.2832214822689694, 2.307431992322676), 1.0242105100537064),\n",
       " ([3, 23], (1.6679684425809265, 2.681026470981642), 1.0130580284007153),\n",
       " ([2, 18], (1.3382273672984308, 2.3126394374803088), 0.9744120701818779),\n",
       " ([3, 15], (1.2485289199469398, 1.8904508432220262), 0.6419219232750863)]"
      ]
     },
     "execution_count": 84,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res_itsy # The last value is the average persistence"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The tie backs picked out in itsy bitsy rhyme"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mAnd the itsy bitsy spider Climbed up the spout again\n",
      "\n",
      "Then the itsy bitsy spider Climbed up the pail once more\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mSo the itsy bitsy spider Back up the wall did go\n",
      "\n",
      "The itsy bitsy spider Back up the chair did creep\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mAnd the itsy bitsy spider Climbed up the spout again\n",
      "\n",
      "The itsy bitsy spider Climbed up without a stop\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mThe itsy bitsy spider Climbed up the waterspout\n",
      "\n",
      "And the itsy bitsy spider Climbed up the spout again\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mAnd the itsy bitsy spider Climbed up the spout again\n",
      "\n",
      "The itsy bitsy spider Rested in the sun\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mOut came the sun And dried up all the rain\n",
      "\n",
      "Out came the sun And when the tree was dry\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mAnd the itsy bitsy spider Climbed up the spout again\n",
      "\n",
      "The itsy bitsy spider Back up the chair did creep\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "for x in res_itsy:\n",
    "    print(color.BOLD + '{}\\n\\n{}'.format(itsy_bitsy[x[0][0]],itsy_bitsy[x[0][1]]) + color.BOLD + '\\n\\n\\n\\n\\n')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Mix of articles"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here, the data set is a mixture of four articles of different topics; cars, internet servers, online cake shop and student educators. Each pragraph of the dataset is from one of the articles mentioned above. The final article is an article with plenty of tie backs.\n",
    "\n",
    "Here, we consider each sentence as a text block."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [],
   "source": [
    "with open('tdanurse/restdata.txt') as f:\n",
    "    con_rest = f.readlines()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {},
   "outputs": [],
   "source": [
    "random.shuffle(con_rest) # Shuffle the paragraphs"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_rest = prep(con_rest, sw, embeddings_dict) # Prepare the embedded dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(213, 300)"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_rest[0].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/opt/conda/lib/python3.7/site-packages/ripser/ripser.py:220: UserWarning: The input point cloud has more columns than rows; did you mean to transpose?\n",
      "  \"The input point cloud has more columns than rows; \"\n"
     ]
    }
   ],
   "source": [
    "rest_rips = ripser(df_rest[0], maxdim = 1, metric = 'euclidean')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Persistent diagram without time skeleton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_diagrams(rest_rips['dgms'], show=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [],
   "source": [
    "rest_rips_dist = rest_rips['dperm2all']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": [
    "for i in range(len(df_rest[0]) - 1):\n",
    "  rest_rips_dist[i,i+1] = 0\n",
    "  rest_rips_dist[i+1,i] = 0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "metadata": {},
   "outputs": [],
   "source": [
    "rest_rips_SIFTS = ripser(rest_rips_dist, maxdim = 1, metric = 'euclidean', \n",
    "                         distance_matrix = True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Persistent diagram with time skeleton"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plot_diagrams(rest_rips_SIFTS['dgms'], show=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "metadata": {},
   "outputs": [],
   "source": [
    "rest_res = persis(rest_rips_dist, 0.5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## The tie backs picked out in the article"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[([20, 123], (1.451924031254171, 3.755004934138156), 2.303080902883985),\n",
       " ([26, 198], (1.52881061446498, 3.624286998579223), 2.095476384114243),\n",
       " ([155, 197], (1.5394767592744827, 3.571139139226844), 2.031662379952361),\n",
       " ([182, 198], (1.4500951231679586, 3.3827894874390614), 1.9326943642711027),\n",
       " ([64, 198], (1.7735077381218631, 3.668264730049702), 1.894756991927839),\n",
       " ([191, 198], (1.580519873139846, 3.37907524114404), 1.7985553680041941),\n",
       " ([30, 86], (1.6872418158198026, 3.384351033687086), 1.6971092178672835),\n",
       " ([177, 198], (1.9043183337105885, 3.5235285905480973), 1.6192102568375089),\n",
       " ([130, 169], (1.6473090679998914, 3.194238094397468), 1.5469290263975766),\n",
       " ([0, 29], (2.1581957089221016, 3.6654711588421898), 1.5072754499200882),\n",
       " ([59, 181], (2.021633347282877, 3.526154689969432), 1.5045213426865547),\n",
       " ([44, 130], (1.8197436366431474, 3.098573705540104), 1.2788300688969567),\n",
       " ([5, 75], (1.9853690916399926, 3.2270862296324507), 1.241717137992458),\n",
       " ([87, 148], (2.2051287980614847, 3.2510406780653525), 1.0459118800038678),\n",
       " ([56, 76], (2.079793217712321, 3.1188915616931876), 1.0390983439808665),\n",
       " ([35, 98], (2.0531002244476926, 3.070464965741963), 1.0173647412942706),\n",
       " ([45, 188], (1.9356759023503702, 2.9339970075757384), 0.9983211052253682),\n",
       " ([13, 107], (2.100724386924385, 3.0925106893206817), 0.9917863023962967),\n",
       " ([50, 194], (2.351697744606894, 3.343093594774566), 0.9913958501676721),\n",
       " ([136, 198], (1.5707719772153172, 2.5561714202761214), 0.9853994430608042),\n",
       " ([12, 15], (2.002213063768088, 2.9585804941515335), 0.9563674303834455),\n",
       " ([198, 205], (1.8042089983265355, 2.7584078396811362), 0.9541988413546008),\n",
       " ([175, 189], (2.5150878462269324, 3.4539571194642433), 0.938869273237311),\n",
       " ([87, 91], (2.1630298027094796, 3.0495936189252597), 0.8865638162157801),\n",
       " ([37, 81], (1.7372615333421275, 2.62094424784873), 0.8836827145066026),\n",
       " ([85, 195], (1.7074415395472253, 2.5886325596918756), 0.8811910201446502),\n",
       " ([174, 179], (2.0520140625319643, 2.929217278135588), 0.8772032156036236),\n",
       " ([160, 177], (2.1555429619948807, 3.0315326154604683), 0.8759896534655875),\n",
       " ([12, 68], (2.1072714623670117, 2.909019053678734), 0.8017475913117225),\n",
       " ([113, 155], (1.6770981858141425, 2.4509489009360337), 0.7738507151218912),\n",
       " ([71, 101], (2.3916695452364447, 3.1624367105391324), 0.7707671653026877),\n",
       " ([80, 126], (1.748188931781108, 2.5132953613401576), 0.7651064295590497),\n",
       " ([5, 151], (2.428219693732463, 3.180286678984), 0.7520669852515369),\n",
       " ([5, 8], (1.9166556972320514, 2.6160926354758245), 0.6994369382437731),\n",
       " ([1, 205], (2.2941157458650476, 2.9854352461528895), 0.6913195002878418),\n",
       " ([119, 136], (1.686587600641986, 2.3768592088310996), 0.6902716081891136),\n",
       " ([8, 17], (2.2807871722906707, 2.962819977694877), 0.6820328054042064),\n",
       " ([143, 181], (2.5352928374342145, 3.2061091302936138), 0.6708162928593993),\n",
       " ([141, 191], (2.3182472774666034, 2.9795267430293606), 0.6612794655627572),\n",
       " ([10, 128], (2.102644350387782, 2.7462113585299015), 0.6435670081421194),\n",
       " ([93, 130], (2.2000422893252605, 2.8255398382304544), 0.6254975489051939),\n",
       " ([35, 58], (2.0361817050979716, 2.6577063508463055), 0.6215246457483339),\n",
       " ([144, 170], (2.443765779739294, 3.057117539976902), 0.6133517602376082),\n",
       " ([76, 107], (2.112594609056218, 2.717796949348679), 0.6052023402924611),\n",
       " ([52, 198], (2.1924402253070103, 2.7647605798656647), 0.5723203545586544),\n",
       " ([130, 198], (1.965748501076891, 2.5147871461681484), 0.5490386450912574),\n",
       " ([130, 139], (2.388795988931116, 2.931442874131738), 0.5426468852006221),\n",
       " ([80, 197], (1.7320040747811078, 2.23760386597724), 0.5055997911961323),\n",
       " ([5, 42], (2.326477123961962, 2.8287462112914743), 0.5022690873295121)]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "rest_res"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "\u001b[1mwhen students see an instructor as a role model they also have a feeling response\n",
      "\n",
      "when students have a positive experience and view their instructor as a role model what do they see in some manner\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mwhether you are employed in part time or full time capacity in a traditional or online classroom you are still teaching and directly involved in the developmental progress of your students\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mit is easy to see why teaching in a transformative manner would matter greatly for students\n",
      "\n",
      "as an educator consider this question is functioning in a transformative manner a matter of making consciousness choices in how you act while you are teaching or is it a result of every interaction you have with your students\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mit is about the fulfillment of your mission as an educator going beyond the function of what you do and even more than knowing the subject of what you teach it is about the connection you establish cultivate and nurture during the time you have with your students whether it is a few weeks or an entire term\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mdon t be concerned with how quickly students look up to you as that will occur naturally when you become the best version of yourself as an educator that you can be\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mshe gave me her full attention during my visit not that i would have minded because someone had to tend to the counter each time a customer came in\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mnow you also have heard of servers getting down or servers not working properly that may be because of more number of users using or working at a same time which creates a load on the server and which in turn reduces the speed of the servers and it takes more time to load\n",
      "\n",
      "now there are general servers like the servers of whatsapp where multiple users are working and then there are dedicated servers which are used for specific purposes by a single user but using a dedicated servers has a cost and unlike whatsapp it can t be used freely\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mfinding one in good shape without owner modifications is increasingly difficult\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mif you are looking to purchase a unique cake we suggest that you keep a few important things in mind\n",
      "\n",
      "it s important to keep in mind that the taste of these cakes is quite important\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mbecoming a role model\n",
      "\n",
      "what does it mean to be a role model\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mto be a transformative educator focus on your students and becoming your best as an educator\n",
      "\n",
      "the answer is that a transformative approach to teaching transforms both the educator and student\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mon the other hand if you are going to buy online we suggest that you buy something unique\n",
      "\n",
      "if you are looking to purchase a unique cake we suggest that you keep a few important things in mind\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthere were the obvious rust areas like the outer rocker panels along with the two rear fenders and the right front fender but inner rocker sills also looked suspicious\n",
      "\n",
      "after that the vehicle looked like it belonged back in the show room minus doors chrome lights bumpers etc\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe rubber rotoflex guibo bushing bearing between the transmission and front of the driveshaft was the worst of all parts requiring replacement\n",
      "\n",
      "due to the age of the car i decided to replace all rubber frame and mounting bushings\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mif you need a normal cake with a bit of icing you may head to your nearby bakery shop to place your order\n",
      "\n",
      "split enz is on the corner of tainui and guinness street so well hidden that you would not know it exists if you are a visitor to the town driving around looking for a place to get a haircut\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mif you want to send cakes to visakhapatnam in india or you are after cakes home delivery in visakhapatnam you can choose a good online cake delivery service\n",
      "\n",
      "this is important because some online delivery services may not deliver cakes in some cities\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe good thing is that you can check out a huge collection of cake varieties on the websites of cake sellers\n",
      "\n",
      "going with a provider that has a huge collection of cakes is a great idea\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe car became everything i dreamed it would be\n",
      "\n",
      "once everything looked good i hit the road and drove the car for a few weeks learning as much as i could about it\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe town is the commercial centre of the west coast with buses and trains arriving and departing from the train station\n",
      "\n",
      "there is also a subways near the train station\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mmore importantly i know i have made a long term impact when i receive unsolicited emails from students and they share special moments from class lessons learned challenges they have overcome lightbulb or aha moments or growth they have experienced even after class has concluded as many do not realize the impact of what they have learned until sometime later\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mi was finally ready to show this vintage 1972 bmw 2002tii to anyone willing to look\n",
      "\n",
      "i had the vintage bmw 202tii the way i wanted it\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mnot every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\n",
      "\n",
      "a role model is someone who will lead by example which means setting a bar and meeting students at that point\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1msplit enz hair salon greymouth\n",
      "\n",
      "i was quite impressed with my experience with split enz hair salon in greymouth when i went for a haircut sometime in october 2019\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe rubber rotoflex guibo bushing bearing between the transmission and front of the driveshaft was the worst of all parts requiring replacement\n",
      "\n",
      "the rear universal joint on the driveshaft was seized in one direction which meant replacing the entire driveshaft since it comes as a complete sealed unit\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mit also involves being responsive to your students and listening to them receiving feedback from them and being willing to adapt your instructional practice to meet their needs\n",
      "\n",
      "as educators hone their instructional strategies or their teaching craft and refine how they communicate interact and address the developmental needs of students their work becomes much more meaningful\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mfor example when you send a mail via gmail you are working on the servers of google which are making sure that your mail reaches to the recipient and also saves your mails and data for as long as you want\n",
      "\n",
      "so to understand it in short servers are the reason you are able to send mails order food online chat on whatsapp surf on facebook and everything which you are able to do on internet\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mi was concerned about the mechanical fuel injection system but it seemed fine\n",
      "\n",
      "the original 2002tii had a kugelfischer mechanical fuel injection system a first for bmw\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe shift throw on the 2002tii is long but this one made constant gear changing an unpleasant chore\n",
      "\n",
      "finding one in good shape without owner modifications is increasingly difficult\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mi was finally ready to show this vintage 1972 bmw 2002tii to anyone willing to look\n",
      "\n",
      "i fondly remember neighbours allowing me to test drive their mgbs triumphs and minis but it was getting behind the wheel of a 1972 bmw 2002tii that confirmed my thinking\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mwhat if you decide to function from this point forward in a manner that is transformative for your students so they are somehow better for having been enrolled in your classes\n",
      "\n",
      "it is easy to see why teaching in a transformative manner would matter greatly for students\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mi promised myself back then that someday i would own one of these fabulous vehicles\n",
      "\n",
      "we just wanted to see if it would run\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mteaching in a transformative manner is about changing the focus of your instructional strategies from being teacher centered to student centered with meeting the needs of your students as the primary focus and any educator is likely to find this to be very fulfilling\n",
      "\n",
      "students are also inspired by this instructor as this instructor provides ideas suggestions and tips that are individual in nature and meant to address specific developmental needs\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthere were the obvious rust areas like the outer rocker panels along with the two rear fenders and the right front fender but inner rocker sills also looked suspicious\n",
      "\n",
      "the two in the rear were rusted right out\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthere were the obvious rust areas like the outer rocker panels along with the two rear fenders and the right front fender but inner rocker sills also looked suspicious\n",
      "\n",
      "the entire right pillar between fender and door hinge was almost nothing but rust\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mlead your students by the power of example\n",
      "\n",
      "a role model is someone who will lead by example which means setting a bar and meeting students at that point\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mas the class progresses you may take into consideration the perspective of your students along with what motivates them how they persist when faced with challenges and what it is like for them to interact with the classroom environment\n",
      "\n",
      "more importantly i know i have made a long term impact when i receive unsolicited emails from students and they share special moments from class lessons learned challenges they have overcome lightbulb or aha moments or growth they have experienced even after class has concluded as many do not realize the impact of what they have learned until sometime later\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthe entire right pillar between fender and door hinge was almost nothing but rust\n",
      "\n",
      "the car had been partially painted once but it was a terrible job and there was evidence of excess body filler cracking paint and some visible minor rust\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mwhat does it mean to be a transformative educator\n",
      "\n",
      "the answer is that a transformative approach to teaching transforms both the educator and student\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mso don t forget to check this section of the site before making the final decision\n",
      "\n",
      "she gave me her full attention during my visit not that i would have minded because someone had to tend to the counter each time a customer came in\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthen very carefully it was a pain staking effort to re install all the chrome lights grills and bumpers that had to be re attached\n",
      "\n",
      "i completely stripped the vehicle of all chrome lights grills bumpers etc\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1malso consider the appearance of the cake as well\n",
      "\n",
      "if you are looking to purchase a unique cake we suggest that you keep a few important things in mind\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mif you want to send cakes to visakhapatnam in india or you are after cakes home delivery in visakhapatnam you can choose a good online cake delivery service\n",
      "\n",
      "based on these tips it will be much easier for you to opt for the best cake delivery service\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mbased on your personal taste you can choose from different designs and flavors\n",
      "\n",
      "however that doesn t mean that you should make your choice based on the taste alone\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1msplit enz is on the corner of tainui and guinness street so well hidden that you would not know it exists if you are a visitor to the town driving around looking for a place to get a haircut\n",
      "\n",
      "once everything looked good i hit the road and drove the car for a few weeks learning as much as i could about it\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1meven the 2002tii tell tale dashboard clock was present and in working order\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mif you are looking to purchase a unique cake we suggest that you keep a few important things in mind\n",
      "\n",
      "not every student is going to have a positive experience while they interact with you despite the best of intentions you may have set yet when students know their instructors care they are more willing to put in the time and make an effort to try when it comes to being involved in the learning process\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mif you are looking to purchase a unique cake we suggest that you keep a few important things in mind\n",
      "\n",
      "choose something unique\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mteaching in a transformative manner is about changing the focus of your instructional strategies from being teacher centered to student centered with meeting the needs of your students as the primary focus and any educator is likely to find this to be very fulfilling\n",
      "\n",
      "as an educator consider this question is functioning in a transformative manner a matter of making consciousness choices in how you act while you are teaching or is it a result of every interaction you have with your students\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\u001b[1mthere were the obvious rust areas like the outer rocker panels along with the two rear fenders and the right front fender but inner rocker sills also looked suspicious\n",
      "\n",
      "rear outer fenders were tin filled and new front fenders were installed\u001b[1m\n",
      "\n",
      "\n",
      "\n",
      "\n",
      "\n"
     ]
    }
   ],
   "source": [
    "print_text(rest_res, df_rest[1])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 43 out of 49 tie backs detected were correct"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Essay Scoring"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Now, below is a dataset containing essays and their corresponding scores by few graders. Let's see if the number of tie backs and the number of clusters are related to the grades in any way. For convenience, we choose the grades of only one grader.\n",
    "\n",
    "Here also, we choose sentences as our text blocks."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Loading the dataset"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_kids = pd.read_csv('tdanurse/kids/training_set_rel3.tsv', sep = '\\t', encoding = \"ISO-8859-1\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 85,
   "metadata": {},
   "outputs": [],
   "source": [
    "X = df_kids.sample(n=6000) # We sample 6000 data points randomly for computational reasons"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {},
   "outputs": [],
   "source": [
    "scores = []\n",
    "aver_loop = []\n",
    "clust = []\n",
    "aver_clust = []\n",
    "thresh_loop = 0.25\n",
    "thresh_clust = 2\n",
    "for x in X['essay']:\n",
    "    x_sent = sent_tokenize(x)\n",
    "    d_mat, mean, clus = ripss2(x_sent, sw, embeddings_dict, single = True, doplot = False, thresh_clust = thresh_clust)\n",
    "    aver_clust.append(mean)\n",
    "    clust.append(clus)\n",
    "    rest_res = persis(d_mat, thresh_loop)\n",
    "    scores.append(len(rest_res))\n",
    "    temp = 0\n",
    "    i = 0\n",
    "    for y in rest_res:\n",
    "        temp += y[2]\n",
    "        i += 1\n",
    "    try:\n",
    "        temp = temp/i\n",
    "        aver_loop.append(temp - thresh_loop)\n",
    "    except ZeroDivisionError:\n",
    "        aver_loop.append(0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "metadata": {},
   "outputs": [],
   "source": [
    "X['scores'] = scores # Number of tie-backs\n",
    "X['aver_loop'] = aver_loop # Average persistence of the tie-backs\n",
    "X['clusters'] = clust # Number of one persistent dimensional clusters\n",
    "X['aver_clust'] = aver_clust # Average persistence of one persistent one dimensional hole"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(6000, 32)"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X.shape"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Shuffle and train-test split"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_S = X.sample(frac=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_train = X_S[:5000]\n",
    "X_test = X_S[5000:6000]\n",
    "y_train = X_S.drop(['essay'], axis = 1)[:5000]\n",
    "y_test = X_S.drop(['essay'], axis = 1)[5000:6000]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Correlation between the new variables and the grader's grades"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.5493036640344714"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['scores'].corr(X_train['rater1_domain1']) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 92,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.589858469226688"
      ]
     },
     "execution_count": 92,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['clusters'].corr(X_train['rater1_domain1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 95,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.22241822615685405"
      ]
     },
     "execution_count": 95,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['aver_loop'].corr(X_train['rater1_domain1'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.035859537609022565"
      ]
     },
     "execution_count": 97,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "X_train['aver_clust'].corr(X_train['rater1_domain1'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here, you can see that the number of persistent tie-backs and persistnet clusters have a strong correlation with the grader's grades. Intuitively, you can say that essays being a text of limited words, the more topics you can present in a well structed manner, the better your essays would be."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot of persistent clusters vs grades"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f5a674e5d30>"
      ]
     },
     "execution_count": 99,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X_train['clusters'][:500], X_train['rater1_domain1'][:500])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Plot of persistent tie-backs vs grades"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 100,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.collections.PathCollection at 0x7f5a67776a58>"
      ]
     },
     "execution_count": 100,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X_train['scores'][:500], X_train['rater1_domain1'][:500])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Neural Network for grading"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Model: \"sequential_4\"\n",
      "_________________________________________________________________\n",
      "Layer (type)                 Output Shape              Param #   \n",
      "=================================================================\n",
      "dense_19 (Dense)             (None, 5)                 15        \n",
      "_________________________________________________________________\n",
      "dense_20 (Dense)             (None, 5)                 30        \n",
      "_________________________________________________________________\n",
      "dense_21 (Dense)             (None, 5)                 30        \n",
      "_________________________________________________________________\n",
      "dense_22 (Dense)             (None, 1)                 6         \n",
      "=================================================================\n",
      "Total params: 81\n",
      "Trainable params: 81\n",
      "Non-trainable params: 0\n",
      "_________________________________________________________________\n"
     ]
    }
   ],
   "source": [
    "NN_model = Sequential()\n",
    "\n",
    "# The Input Layer :\n",
    "NN_model.add(Dense(5, kernel_initializer='normal',input_dim = 2, activation='relu'))\n",
    "\n",
    "# The Hidden Layers :\n",
    "NN_model.add(Dense(5, kernel_initializer='normal',activation='relu'))\n",
    "NN_model.add(Dense(5, kernel_initializer='normal',activation='relu'))\n",
    "#NN_model.add(Dense(5, kernel_initializer='normal',activation='relu'))\n",
    "#NN_model.add(Dense(20, kernel_initializer='normal',activation='relu'))\n",
    "# The Output Layer :\n",
    "NN_model.add(Dense(1, kernel_initializer='normal',activation='linear'))\n",
    "\n",
    "# Compile the network :\n",
    "NN_model.compile(loss='mean_squared_error', optimizer='adam', metrics=['mean_squared_error'])\n",
    "NN_model.summary()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Train on 4000 samples, validate on 1000 samples\n",
      "Epoch 1/30\n",
      "4000/4000 [==============================] - 1s 196us/step - loss: 35.2266 - mean_squared_error: 35.2266 - val_loss: 32.9509 - val_mean_squared_error: 32.9509\n",
      "Epoch 2/30\n",
      "4000/4000 [==============================] - 0s 121us/step - loss: 26.7000 - mean_squared_error: 26.7000 - val_loss: 16.4723 - val_mean_squared_error: 16.4723\n",
      "Epoch 3/30\n",
      "4000/4000 [==============================] - 0s 114us/step - loss: 12.7559 - mean_squared_error: 12.7559 - val_loss: 13.0129 - val_mean_squared_error: 13.0129\n",
      "Epoch 4/30\n",
      "4000/4000 [==============================] - 0s 114us/step - loss: 12.0898 - mean_squared_error: 12.0898 - val_loss: 12.9195 - val_mean_squared_error: 12.9195\n",
      "Epoch 5/30\n",
      "4000/4000 [==============================] - 0s 119us/step - loss: 12.0284 - mean_squared_error: 12.0284 - val_loss: 12.8426 - val_mean_squared_error: 12.8426\n",
      "Epoch 6/30\n",
      "4000/4000 [==============================] - 0s 119us/step - loss: 11.9494 - mean_squared_error: 11.9494 - val_loss: 12.7988 - val_mean_squared_error: 12.7988\n",
      "Epoch 7/30\n",
      "4000/4000 [==============================] - 1s 127us/step - loss: 11.9054 - mean_squared_error: 11.9054 - val_loss: 12.7390 - val_mean_squared_error: 12.7390\n",
      "Epoch 8/30\n",
      "4000/4000 [==============================] - 1s 129us/step - loss: 11.8831 - mean_squared_error: 11.8831 - val_loss: 12.6961 - val_mean_squared_error: 12.6961\n",
      "Epoch 9/30\n",
      "4000/4000 [==============================] - 1s 168us/step - loss: 11.8501 - mean_squared_error: 11.8501 - val_loss: 12.6606 - val_mean_squared_error: 12.6606\n",
      "Epoch 10/30\n",
      "4000/4000 [==============================] - 0s 119us/step - loss: 11.8184 - mean_squared_error: 11.8184 - val_loss: 12.6347 - val_mean_squared_error: 12.6347\n",
      "Epoch 11/30\n",
      "4000/4000 [==============================] - 0s 121us/step - loss: 11.7983 - mean_squared_error: 11.7983 - val_loss: 12.6151 - val_mean_squared_error: 12.6151\n",
      "Epoch 12/30\n",
      "4000/4000 [==============================] - 0s 114us/step - loss: 11.7822 - mean_squared_error: 11.7822 - val_loss: 12.6165 - val_mean_squared_error: 12.6165\n",
      "Epoch 13/30\n",
      "4000/4000 [==============================] - 1s 168us/step - loss: 11.7724 - mean_squared_error: 11.7724 - val_loss: 12.6118 - val_mean_squared_error: 12.6118\n",
      "Epoch 14/30\n",
      "4000/4000 [==============================] - 0s 119us/step - loss: 11.7650 - mean_squared_error: 11.7650 - val_loss: 12.5934 - val_mean_squared_error: 12.5934\n",
      "Epoch 15/30\n",
      "4000/4000 [==============================] - 0s 121us/step - loss: 11.7759 - mean_squared_error: 11.7759 - val_loss: 12.5789 - val_mean_squared_error: 12.5789\n",
      "Epoch 16/30\n",
      "4000/4000 [==============================] - 0s 114us/step - loss: 11.7616 - mean_squared_error: 11.7616 - val_loss: 12.5961 - val_mean_squared_error: 12.5961\n",
      "Epoch 17/30\n",
      "4000/4000 [==============================] - 0s 124us/step - loss: 11.7540 - mean_squared_error: 11.7540 - val_loss: 12.5762 - val_mean_squared_error: 12.5762\n",
      "Epoch 18/30\n",
      "4000/4000 [==============================] - 0s 123us/step - loss: 11.7446 - mean_squared_error: 11.7446 - val_loss: 12.5655 - val_mean_squared_error: 12.5655\n",
      "Epoch 19/30\n",
      "4000/4000 [==============================] - 0s 124us/step - loss: 11.7677 - mean_squared_error: 11.7677 - val_loss: 12.5629 - val_mean_squared_error: 12.5629\n",
      "Epoch 20/30\n",
      "4000/4000 [==============================] - 1s 126us/step - loss: 11.7537 - mean_squared_error: 11.7537 - val_loss: 12.5663 - val_mean_squared_error: 12.5663\n",
      "Epoch 21/30\n",
      "4000/4000 [==============================] - 0s 125us/step - loss: 11.7719 - mean_squared_error: 11.7719 - val_loss: 12.5755 - val_mean_squared_error: 12.5755\n",
      "Epoch 22/30\n",
      "4000/4000 [==============================] - 1s 178us/step - loss: 11.7749 - mean_squared_error: 11.7749 - val_loss: 12.5638 - val_mean_squared_error: 12.5638\n",
      "Epoch 23/30\n",
      "4000/4000 [==============================] - 1s 258us/step - loss: 11.7562 - mean_squared_error: 11.7562 - val_loss: 12.5847 - val_mean_squared_error: 12.5847\n",
      "Epoch 24/30\n",
      "4000/4000 [==============================] - 1s 269us/step - loss: 11.7641 - mean_squared_error: 11.7641 - val_loss: 12.5666 - val_mean_squared_error: 12.5666\n",
      "Epoch 25/30\n",
      "4000/4000 [==============================] - 1s 191us/step - loss: 11.7475 - mean_squared_error: 11.7475 - val_loss: 12.5631 - val_mean_squared_error: 12.5631\n",
      "Epoch 26/30\n",
      "4000/4000 [==============================] - 1s 129us/step - loss: 11.7476 - mean_squared_error: 11.7476 - val_loss: 12.5581 - val_mean_squared_error: 12.5581\n",
      "Epoch 27/30\n",
      "4000/4000 [==============================] - 0s 124us/step - loss: 11.7524 - mean_squared_error: 11.7524 - val_loss: 12.5895 - val_mean_squared_error: 12.5895\n",
      "Epoch 28/30\n",
      "4000/4000 [==============================] - 0s 110us/step - loss: 11.7455 - mean_squared_error: 11.7455 - val_loss: 12.5591 - val_mean_squared_error: 12.5591\n",
      "Epoch 29/30\n",
      "4000/4000 [==============================] - 0s 115us/step - loss: 11.7582 - mean_squared_error: 11.7582 - val_loss: 12.5743 - val_mean_squared_error: 12.5743\n",
      "Epoch 30/30\n",
      "4000/4000 [==============================] - 0s 123us/step - loss: 11.7377 - mean_squared_error: 11.7377 - val_loss: 12.5550 - val_mean_squared_error: 12.5550\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<keras.callbacks.callbacks.History at 0x7f5a6662d5f8>"
      ]
     },
     "execution_count": 119,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#NN_model.fit(X_train[['scores', 'aver_loop', 'clusters', 'aver_clust']],X_train['rater1_domain1'], \n",
    "#             epochs=30, batch_size=32, validation_split = 0.2)\n",
    "NN_model.fit(X_train[['scores', 'clusters']],X_train['rater1_domain1'], \n",
    "             epochs=30, batch_size=32, validation_split = 0.2)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## MSE"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1000/1000 [==============================] - 0s 64us/step\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[13.44533507156372, 13.445335388183594]"
      ]
     },
     "execution_count": 120,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "NN_model.evaluate(x = X_test[['scores', 'clusters']], y = X_test['rater1_domain1'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [],
   "source": [
    "predictions = NN_model.predict(X_test[['scores', 'clusters']])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 122,
   "metadata": {},
   "outputs": [],
   "source": [
    "X_test['pred'] = predictions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 123,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.legend.Legend at 0x7f5a66438cc0>"
      ]
     },
     "execution_count": 123,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1500x600 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "X_test['pred'].reset_index()['pred'][:100].plot(figsize = (15,6))\n",
    "X_test['rater1_domain1'].reset_index()['rater1_domain1'][:100].plot(figsize = (15,6))\n",
    "plt.legend(['Predicted grades', \"Grader's grades\"])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "What we see here is that the peaks and troughs of the predicted grades and the grader's grades match well in the test data"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
